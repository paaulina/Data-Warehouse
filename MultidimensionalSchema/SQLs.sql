------------------------------LAB1--DATA-WAREHOUSING-----------------------------

-----Paulina Jedrzejewska--------------------------------------------------------
-----Cristina Capdevila Choy-----------------------------------------------------

------------------------------- DIMENSIONS --------------------------------------
CREATE TABLE AIRCRAFTS
(
  REGISTRATION_CODE CHAR (6) PRIMARY KEY,
  MODEL CHAR (50) NOT NULL,
  MANUFACTURER CHAR (50) NOT NULL
);


CREATE TABLE PEOPLE
(
  REPORTER_ID NUMBER PRIMARY KEY,  -- RESERVED VALUE FOR PILOT: (-1, "-"); All the ids > 0 are indicating maintanence people.
  AIRPORT CHAR (5) NOT NULL        -- We assume that one maintanence person can be assigned to one airport only.
);


CREATE TABLE DATES 
(
  DATE_DAY DATE PRIMARY KEY,
  CALENDAR_MONTH CHAR (10) NOT NULL,
  CALENDAR_YEAR CHAR (4) NOT NULL
);

------------------------------ FACTS --------------------------------------------

CREATE TABLE AIRCRAFTS_DAILY_INFO
(
  REGISTRATION_CODE CHAR (6) NOT NULL REFERENCES AIRCRAFTS (REGISTRATION_CODE),
  DATE_DAY DATE NOT NULL REFERENCES DATES (DATE_DAY),
  
  FLIGHT_HOURS NUMBER (18,3) NOT NULL,
  TAKEOFFS_COUNT NUMBER NOT NULL,
  DELAY_MINUTES NUMBER (18,3) NOT NULL,
  CANCELLATIONS_COUNT NUMBER NOT NULL,
  DELAYS_COUNT NUMBER NOT NULL,
  
  DAYS_IN_SERVICE NUMBER (10,3) NOT NULL,
  DAYS_OUT_OF_SERVICE_U NUMBER (10,3) NOT NULL,
  DAYS_OUT_OF_SERVICE_S NUMBER (10,3) NOT NULL,
  
  PRIMARY KEY (REGISTRATION_CODE, DATE_DAY)
);

CREATE TABLE LOGBOOK_DAILY_INFO
(
  REGISTRATION_CODE CHAR (6) NOT NULL REFERENCES AIRCRAFTS (REGISTRATION_CODE),
  REPORTER_ID NUMBER NOT NULL REFERENCES PEOPLE(REPORTER_ID),						    -- Row with REPORTER_ID = -1 indicates the count of all logbook reports 
  DATE_DAY DATE NOT NULL REFERENCES DATES(DATE_DAY),									-- made by Pilots for particular aircraft on darticular day 
  LOGBOOK_COUNT NUMBER (9) NOT NULL,
  PRIMARY KEY (REGISTRATION_CODE, REPORTER_ID, DATE_DAY )
);
--
--
--------------------------- MATERIALIZED VIEWS---------------------------------------
--
-------------LOGS--------------
CREATE MATERIALIZED VIEW LOG ON AIRCRAFTS
WITH ROWID, SEQUENCE(REGISTRATION_CODE, MODEL, MANUFACTURER)
INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW LOG ON DATES
WITH ROWID, SEQUENCE(DATE_DAY, CALENDAR_MONTH, CALENDAR_YEAR)
INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW LOG ON PEOPLE
WITH ROWID, SEQUENCE(REPORTER_ID, AIRPORT)
INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW LOG ON AIRCRAFTS_DAILY_INFO
WITH ROWID, SEQUENCE(  
	REGISTRATION_CODE,
	DATE_DAY,
	FLIGHT_HOURS,
	TAKEOFFS_COUNT,
	DELAY_MINUTES,
	CANCELLATIONS_COUNT,
	DELAYS_COUNT,
	DAYS_IN_SERVICE,
	DAYS_OUT_OF_SERVICE_U,
	DAYS_OUT_OF_SERVICE_S
	)
INCLUDING NEW VALUES;

CREATE MATERIALIZED VIEW LOG ON LOGBOOK_DAILY_INFO
WITH ROWID, SEQUENCE(  
  	REGISTRATION_CODE,
  	REPORTER_ID,						
  	DATE_DAY,									
  	LOGBOOK_COUNT
	)
INCLUDING NEW VALUES;

---------VIEW CREATION ------------
CREATE MATERIALIZED VIEW MV_AIRCRAINFO
BUILD IMMEDIATE 
REFRESH FAST
ON DEMAND 
ENABLE QUERY REWRITE
AS
SELECT a.REGISTRATION_CODE, a.MODEL, d.CALENDAR_MONTH, d.CALENDAR_YEAR,
	SUM(f.FLIGHT_HOURS) AS FH,
	SUM(f.TAKEOFFS_COUNT) AS TO_,
	SUM(f.DAYS_IN_SERVICE) as ADIS,
	SUM(f.DAYS_OUT_OF_SERVICE_S) as ADOSS,
	SUM(f.DAYS_OUT_OF_SERVICE_U) AS ADOSU,
	SUM(f.DAYS_OUT_OF_SERVICE_S) + SUM(f.DAYS_OUT_OF_SERVICE_U) AS ADOS,
	SUM(f.DELAYS_COUNT)/SUM(f.TAKEOFFS_COUNT)*100 as DYR,                                          
 	SUM(f.CANCELLATIONS_COUNT)/SUM(f.TAKEOFFS_COUNT)*100 as CNR,
 	(100 - ((SUM(f.CANCELLATIONS_COUNT) + SUM(f.DELAYS_COUNT))/SUM(f.TAKEOFFS_COUNT))*100) as TDR,
 	SUM(f.DELAY_MINUTES)/SUM(f.DELAYS_COUNT)*100 as AVGDD
FROM AIRCRAFTS a, DATES d, AIRCRAFTS_DAILY_INFO f
WHERE f.REGISTRATION_CODE = a.REGISTRATION_CODE
	AND f.DATE_DAY = d.DATE_DAY
GROUP BY a.REGISTRATION_CODE, a.MODEL, d.CALENDAR_MONTH, d.CALENDAR_YEAR
ORDER BY a.REGISTRATION_CODE, a.MODEL, d.CALENDAR_MONTH, d.CALENDAR_YEAR;


CREATE MATERIALIZED VIEW MV_LOGBOOK_INFO
BUILD IMMEDIATE 
REFRESH FAST 
ON DEMAND 
ENABLE QUERY REWRITE
AS
SELECT a.REGISTRATION_CODE, a.MODEL, a.MANUFACTURER, d.CALENDAR_MONTH, d.CALENDAR_YEAR, p.REPORTER_ID, p.AIRPORT,
	SUM(L.LOGBOOK_COUNT) AS logbook_sum,
	SUM(f.TAKEOFFS_COUNT) AS takeoffs_sum,
	SUM(f.FLIGHT_HOURS) AS flight_hours_sum
FROM AIRCRAFTS a, DATES d, PEOPLE p, LOGBOOK_DAILY_INFO L, AIRCRAFTS_DAILY_INFO f
WHERE L.REGISTRATION_CODE = a.REGISTRATION_CODE
	AND L.DATE_DAY = d.DATE_DAY
	AND p.REPORTER_ID = L.REPORTER_ID
	AND L.REGISTRATION_CODE = f.REGISTRATION_CODE
	AND L.DATE_DAY = f.DATE_DAY
GROUP BY a.REGISTRATION_CODE, a.MODEL, a.MANUFACTURER, d.CALENDAR_MONTH, d.CALENDAR_YEAR, p.REPORTER_ID, p.AIRPORT
ORDER BY a.REGISTRATION_CODE, a.MODEL, a.MANUFACTURER, d.CALENDAR_MONTH, d.CALENDAR_YEAR, p.REPORTER_ID, p.AIRPORT; 
